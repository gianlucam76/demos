## Fetch postgres credentials from the cluster where services are deployed.
## Create a Secret in the management cluster that contains the credentials
apiVersion: lib.projectsveltos.io/v1beta1
kind: EventSource
metadata:
  name: collect-postgres-credentials
spec:
  collectResources: true
  resourceSelectors:
  - group: ""
    version: "v1"
    kind: "Secret"
    labelFilters:
    - key: app
      operation: Equal
      value: postgres
---
apiVersion: lib.projectsveltos.io/v1beta1
kind: EventTrigger
metadata:
  name: postgres-credentials
spec:
  sourceClusterSelector:
    matchLabels:
      type: managed-services
  eventSourceName: collect-postgres-credentials
  oneForEvent: true
  policyRefs:
  - name: postgres-credentials
    namespace: default
    kind: ConfigMap
    deploymentType: Local
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-credentials
  annotations:
    projectsveltos.io/template: ok
data:
  credentials: |
    apiVersion: v1
    kind: Secret
    metadata:
      name: postgres-credentials
      namespace: {{ .Resource.metadata.namespace }} 
    data:
      "postgres-password": "{{ get .Resource.data `postgres-password` }}"
