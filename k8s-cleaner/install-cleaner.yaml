apiVersion: v1
data:
  manifest.yaml: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: projectsveltos
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.15.0
      name: cleaners.apps.projectsveltos.io
    spec:
      group: apps.projectsveltos.io
      names:
        kind: Cleaner
        listKind: CleanerList
        plural: cleaners
        singular: cleaner
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: Cleaner is the Schema for the cleaners API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: CleanerSpec defines the desired state of Cleaner
                properties:
                  action:
                    default: Delete
                    description: |-
                      Action indicates the action to take on selected object. Default action
                      is to delete object. If set to transform, the transform function
                      will be invoked and then object will be updated.
                    enum:
                    - Delete
                    - Transform
                    - Scan
                    type: string
                  notifications:
                    description: Notification is a list of source of events to evaluate.
                    items:
                      properties:
                        name:
                          description: |-
                            Name of the notification check.
                            Must be a DNS_LABEL and unique within the Cleaner.
                          type: string
                        notificationRef:
                          description: |-
                            NotificationRef is a reference to a notification-specific resource that holds
                            the details for the notification.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                                TODO: this design is not final and this field is subject to change in the future.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type:
                          description: NotificationType specifies the type of notification
                          enum:
                          - CleanerReport
                          - Slack
                          - Webex
                          - Discord
                          - Teams
                          type: string
                      required:
                      - name
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  resourcePolicySet:
                    description: ResourcePolicySet identifies a group of resources
                    properties:
                      aggregatedSelection:
                        description: |-
                          This field is optional and can be used to specify a Lua function
                          that will be used to further select a subset of the resources that
                          have already been selected using the ResourceSelector field.
                          The function will receive the array of resources selected by ResourceSelectors.
                          If this field is not specified, all resources selected by the ResourceSelector
                          field will be considered.
                          This field allows to perform more complex filtering or selection operations
                          on the resources, looking at all resources together.
                          This can be useful for more sophisticated tasks, such as identifying resources
                          that are related to each other or that have similar properties.
                        type: string
                      resourceSelectors:
                        description: ResourceSelectors identifies what resources to select
                        items:
                          properties:
                            evaluate:
                              description: |-
                                Evaluate contains a function "evaluate" in lua language.
                                The function will be passed one of the object selected based on
                                above criteria.
                                Must return struct with field "matching" representing whether
                                object is a match and an optional "message" field.
                              type: string
                            group:
                              description: Group of the resource deployed in the Cluster.
                              type: string
                            kind:
                              description: Kind of the resource deployed in the Cluster.
                              minLength: 1
                              type: string
                            labelFilters:
                              description: LabelFilters allows to filter resources based
                                on current labels.
                              items:
                                properties:
                                  key:
                                    description: Key is the label key
                                    type: string
                                  operation:
                                    description: Operation is the comparison operation
                                    enum:
                                    - Equal
                                    - Different
                                    type: string
                                  value:
                                    description: Value is the label value
                                    type: string
                                required:
                                - key
                                - operation
                                - value
                                type: object
                              type: array
                            namespace:
                              description: |-
                                Namespace of the resource deployed in the  Cluster.
                                Empty for resources scoped at cluster level.
                              type: string
                            namespaceSelector:
                              description: NamespaceSelector is a label selector for namespaces
                              type: string
                            version:
                              description: Version of the resource deployed in the Cluster.
                              type: string
                          required:
                          - group
                          - kind
                          - version
                          type: object
                        type: array
                    required:
                    - resourceSelectors
                    type: object
                  schedule:
                    description: Schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
                    type: string
                  startingDeadlineSeconds:
                    description: |-
                      Optional deadline in seconds for starting the job if it misses scheduled
                      time for any reason.  Missed jobs executions will be counted as failed ones.
                    format: int64
                    type: integer
                  storeResourcePath:
                    description: |-
                      StoreResources will store full resources in this directory.
                      Must be a volume where Cleaner can dump all matching resources.
                    type: string
                  transform:
                    description: |-
                      Transform contains a function "transform" in lua language.
                      When Action is set to *Transform*, this function will be invoked
                      and be passed one of the object selected based on
                      above criteria.
                      Must the new object that will be applied
                    type: string
                required:
                - resourcePolicySet
                - schedule
                type: object
              status:
                description: CleanerStatus defines the observed state of Cleaner
                properties:
                  failureMessage:
                    description: |-
                      FailureMessage provides more information about the error, if
                      any occurred
                    type: string
                  lastRunTime:
                    description: Information when was the last time a snapshot was successfully
                      scheduled.
                    format: date-time
                    type: string
                  nextScheduleTime:
                    description: Information when next snapshot is scheduled
                    format: date-time
                    type: string
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.15.0
      name: reports.apps.projectsveltos.io
    spec:
      group: apps.projectsveltos.io
      names:
        kind: Report
        listKind: ReportList
        plural: reports
        singular: report
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: Report is the Schema for the reports API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: ReportSpec defines the desired state of Report
                properties:
                  action:
                    description: Action indicates the action to take on selected object.
                    enum:
                    - Delete
                    - Transform
                    - Scan
                    type: string
                  resourceInfo:
                    description: Resources identify a set of Kubernetes resource
                    items:
                      properties:
                        fullResource:
                          description: |-
                            FullResource contains full resources before
                            before Cleaner took an action on it
                          format: byte
                          type: string
                        message:
                          description: Message is an optional field.
                          type: string
                        resource:
                          description: Resource identify a Kubernetes resource
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                                TODO: this design is not final and this field is subject to change in the future.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    type: array
                required:
                - action
                - resourceInfo
                type: object
            type: object
        served: true
        storage: true
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/component: rbac
        app.kubernetes.io/created-by: k8s-cleaner
        app.kubernetes.io/instance: controller-manager-sa
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: serviceaccount
        app.kubernetes.io/part-of: k8s-cleaner
      name: k8s-cleaner-controller
      namespace: projectsveltos
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: k8s-cleaner-controller-role
    rules:
    - apiGroups:
      - '*'
      resources:
      - '*'
      verbs:
      - '*'
      - delete
      - get
      - list
      - watch
    - apiGroups:
      - apps.projectsveltos.io
      resources:
      - cleaners
      verbs:
      - get
      - list
      - patch
      - watch
    - apiGroups:
      - apps.projectsveltos.io
      resources:
      - cleaners/finalizers
      verbs:
      - update
    - apiGroups:
      - apps.projectsveltos.io
      resources:
      - cleaners/status
      verbs:
      - get
      - patch
      - update
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/component: kube-rbac-proxy
        app.kubernetes.io/created-by: k8s-cleaner
        app.kubernetes.io/instance: metrics-reader
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: clusterrole
        app.kubernetes.io/part-of: k8s-cleaner
      name: k8s-cleaner-metrics-reader
    rules:
    - nonResourceURLs:
      - /metrics
      verbs:
      - get
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/component: kube-rbac-proxy
        app.kubernetes.io/created-by: k8s-cleaner
        app.kubernetes.io/instance: proxy-role
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: clusterrole
        app.kubernetes.io/part-of: k8s-cleaner
      name: k8s-cleaner-proxy-role
    rules:
    - apiGroups:
      - authentication.k8s.io
      resources:
      - tokenreviews
      verbs:
      - create
    - apiGroups:
      - authorization.k8s.io
      resources:
      - subjectaccessreviews
      verbs:
      - create
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/component: rbac
        app.kubernetes.io/created-by: k8s-cleaner
        app.kubernetes.io/instance: manager-rolebinding
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: clusterrolebinding
        app.kubernetes.io/part-of: k8s-cleaner
      name: k8s-cleaner-controller-rolebinding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: k8s-cleaner-controller-role
    subjects:
    - kind: ServiceAccount
      name: k8s-cleaner-controller
      namespace: projectsveltos
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/component: kube-rbac-proxy
        app.kubernetes.io/created-by: k8s-cleaner
        app.kubernetes.io/instance: proxy-rolebinding
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: clusterrolebinding
        app.kubernetes.io/part-of: k8s-cleaner
      name: k8s-cleaner-proxy-rolebinding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: k8s-cleaner-proxy-role
    subjects:
    - kind: ServiceAccount
      name: k8s-cleaner-controller
      namespace: projectsveltos
    ---
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/component: kube-rbac-proxy
        app.kubernetes.io/created-by: k8s-cleaner
        app.kubernetes.io/instance: controller-manager-metrics-service
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: service
        app.kubernetes.io/part-of: k8s-cleaner
        control-plane: k8s-cleaner
      name: k8s-cleaner-controller-metrics-service
      namespace: projectsveltos
    spec:
      ports:
      - name: https
        port: 8443
        protocol: TCP
        targetPort: https
      selector:
        control-plane: k8s-cleaner
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: manager
        app.kubernetes.io/created-by: k8s-cleaner
        app.kubernetes.io/instance: controller-manager
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: deployment
        app.kubernetes.io/part-of: k8s-cleaner
        control-plane: k8s-cleaner
      name: k8s-cleaner-controller
      namespace: projectsveltos
    spec:
      replicas: 1
      selector:
        matchLabels:
          control-plane: k8s-cleaner
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: controller
          labels:
            control-plane: k8s-cleaner
        spec:
          containers:
          - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            command:
            - /manager
            image: projectsveltos/k8s-cleaner:main
            livenessProbe:
              httpGet:
                path: /healthz
                port: 8081
              initialDelaySeconds: 15
              periodSeconds: 20
            name: controller
            readinessProbe:
              httpGet:
                path: /readyz
                port: 8081
              initialDelaySeconds: 5
              periodSeconds: 10
            resources:
              limits:
                cpu: 500m
                memory: 128Mi
              requests:
                cpu: 10m
                memory: 64Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
          - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
            image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
            name: kube-rbac-proxy
            ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            resources:
              limits:
                cpu: 500m
                memory: 128Mi
              requests:
                cpu: 5m
                memory: 64Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
          securityContext:
            runAsNonRoot: true
          serviceAccountName: k8s-cleaner-controller
          terminationGracePeriodSeconds: 10
kind: ConfigMap
metadata:
  name: install-cleaner
  namespace: default